#ifndef _HOMARD_Zone_IDL
#define _HOMARD_Zone_IDL

#include "SALOME_Exception.idl"

module HOMARD
{
  typedef sequence<double    > double_array ;
  typedef sequence<string    > listeHypo ;

  interface HOMARD_Zone
  {

    void     SetName (in string NomZone)                   raises (SALOME::SALOME_Exception);
    string   GetName ()                                    raises (SALOME::SALOME_Exception);

    void     SetZoneType (in long ZoneType)                raises (SALOME::SALOME_Exception);
    long     GetZoneType()                                 raises (SALOME::SALOME_Exception);

    void     SetBox    (in double Xmini, in double Xmaxi, in double Ymini, 
                        in double Ymaxi, in double Zmini, in double Zmaxi)
                                                           raises (SALOME::SALOME_Exception);
    double_array GetBox()                                  raises (SALOME::SALOME_Exception);
    void     SetSphere (in double Xcentre, in double Ycentre, in double Zcentre, in double rayon)
                                                           raises (SALOME::SALOME_Exception);
    double_array GetSphere()                               raises (SALOME::SALOME_Exception);
    void     SetLimit (in double Xincr, in double Yincr, in double Zincr)
                                                           raises (SALOME::SALOME_Exception);
    double_array GetLimit()                                raises (SALOME::SALOME_Exception);

    void     AddHypo(in string NomHypo)                    raises (SALOME::SALOME_Exception);
    void     SupprHypo(in string NomHypo)                  raises (SALOME::SALOME_Exception);
    listeHypo GetHypo()                                    raises (SALOME::SALOME_Exception);

    string   GetDumpPython()                               raises (SALOME::SALOME_Exception);

  };
};
#endif
